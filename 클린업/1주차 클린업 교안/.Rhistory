library(data.table)
library(tidyverse)
data = fread('1주차실습주차실습.csv') %>% mutate_all(as.factor)
str(data)
setwd("C:/Users/위재성/Desktop/1주차 클린업 교안")
data = fread('1주차실습주차실습.csv') %>% mutate_all(as.factor)
data = fread('1주차주차실습.csv') %>% mutate_all(as.factor)
data = fread('1주차실습.csv') %>% mutate_all(as.factor)
str(data)
library(data.table)
library(tidyverse)
data = fread('1주차실습.csv') %>% mutate_all(as.factor)
str(data)
library(data.table)
library(tidyverse)
data = fread('1주차실습.csv') %>% mutate_all(as.factor)
str(data)
str(data)
data %>% table(sex,h1n1_vaccine)
attach(data)
table(sex, h1n1_vaccine)
ftable(sex, h1n1_knowledge, income_poverty)
ftable(sex, h1n1_vaccine, income_poverty)
ftable(sex, income_poverty, h1n1_vaccine)
#원본 데이터
raw_3D <- data.frame(성별 = c(rep("남", 75), rep("여", 88)),
연애 = c(rep("O", 41), rep("X", 34), rep("O", 39),rep("X", 49)),
학과 = c(rep("통계", 11), rep("경영", 16), rep("경제", 14),rep("통계", 25), rep("경영", 4), rep("경제", 5),
rep("통계", 10), rep("경영", 22), rep("경제", 7), rep("통계", 27), rep("경영", 10), rep("경제", 12)))
#3차원 분할표 만들기(2)
ftable(raw_3D$성별, raw_3D$연애, raw_3D$학과) # 3차원 분할표의 경우는 ftable()이 깔끔!
detach(data)
attach(data)
table(sex, h1n1_vaccine) # 2차원
ftable(sex, income_poverty, h1n1_vaccine) # 3차원
sex
sex
detach(data)
sex
2d_table = table(sex, h1n1_vaccine)
prop.table(table_2d)
table_2d = table(sex, h1n1_vaccine)
attach(data)
table_2d = table(sex, h1n1_vaccine)
prop.table(table_2d)
attach(data)
table_2d = table(sex, h1n1_vaccine)
table_2d
addmargins(table_2d) # 주변합 표시
mosaicplot(table_2d) # 시각화
mosaicplot(table_2d, color = c('lightblue', 'lightgreen')) # 시각화
prop.table(table_2d) # 비율 분할표
table_3d = ftable(sex, income_poverty, h1n1_vaccine)
table_3d # 일반 분할표
addmargins(table_3d) # 주변합 표시
mosaicplot(table_3d, color = c('lightblue', 'lightgreen')) # 시각화
ftable_3D=ftable(raw_3D$성별, raw_3D$연애, raw_3D$학과)
prop.table(ftable_3D) #비율에 대한 분할표
#주변합 표시한 분할표
addmargins(ftable_3D)
#분할표 시각화
mosaicplot(ftable_3D, color = c("pink", "black",'yellow'))
prop.table(table_3d) # 비율 분할표
mosaicplot(table_2d, color = c('lightblue', 'lightgreen')) # 시각화
mosaicplot(table_3d, color = c('lightblue', 'lightgreen')) # 시각화
mosaicplot(table_3d, color = c('lightblue', 'lightgreen', 'lightred')) # 시각화
mosaicplot(table_3d, color = c('lightblue', 'lightgreen', 'lightpink')) # 시각화
## 1.분할표 직접 만들어보기
#2차원 분할표(2X3) 생성
SSak_Three <- matrix(c(78, 49, 15, 23, 46, 37), nrow=2)
dimnames(SSak_Three) <- list(성별 = c("남", "여"), 최애 = c("유두래곤", "비룡","린다.G"))
#분할표 시각화 (모자이크 플랏)
mosaicplot(SSak_Three, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(table_3D, color = c("pink", "black",'yellow'))
table_3D = table(raw_3D$성별, raw_3D$연애, raw_3D$학과)
#분할표 시각화
mosaicplot(table_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(ftable_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(table_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(ftable_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(table_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(ftable_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(table_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(ftable_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(table_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(ftable_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(table_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(ftable_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(table_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(ftable_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(table_3D, color = c("pink", "black",'yellow'))
#분할표 시각화
mosaicplot(ftable_3D, color = c("pink", "black",'yellow'))
table_3d = table(sex,income_poverty,h1n1_vaccine)
table_3d # 일반 분할표
addmargins(table_3d) # 주변합 표시
table_3d # 일반 분할표
mosaicplot(table_3d, color = c('lightblue', 'lightgreen')) # 시각화
mosaicplot(ftable_3d, color = c('lightblue', 'lightgreen')) # 시각화
mosaicplot(ftable_3d, color = c('lightblue', 'lightgreen')) # 시각화
ftable_3d = ftable(sex, income_poverty, h1n1_vaccine)
ftable_3d # 일반 분할표
addmargins(ftable_3d) # 주변합 표시
mosaicplot(ftable_3d, color = c('lightblue', 'lightgreen')) # 시각화
mosaicplot(table_3d, color = c('lightblue', 'lightgreen')) # 시각화
## 2. 순서형 변수 독립성 검정
library(vcdExtra) #순서형 독립성 검정을 위한 패키지
install.packages('vcdExtra')
## 2. 순서형 변수 독립성 검정
library(vcdExtra) #순서형 독립성 검정을 위한 패키지
#순서형 정보가 있는 데이터 불러오기
JobSat #vcdExtra 패키지 안에 있는 데이터셋
install.packages('DescTools')
install.packages('vcd')
install.packages("vcd")
library(data.table)
library(tidyverse)
data = fread('1주차실습.csv') %>% mutate_all(as.factor)
str(data)
attach(data)
table_2d = table(sex, h1n1_vaccine)
table_2d # 일반 분할표
addmargins(table_2d) # 주변합 표시
mosaicplot(table_2d, color = c('lightblue', 'lightgreen')) # 시각화
prop.table(table_2d) # 비율 분할표
library(data.table)
library(tidyverse)
data = fread('1주차실습.csv') %>% mutate_all(as.factor)
str(data)
attach(data)
table_2d = table(sex, h1n1_vaccine)
table_2d # 일반 분할표
addmargins(table_2d) # 주변합 표시
mosaicplot(table_2d, color = c('lightblue', 'lightgreen')) # 시각화
prop.table(table_2d) # 비율 분할표
ftable_3d = ftable(sex, income_poverty, h1n1_vaccine)
ftable_3d # 일반 분할표
addmargins(ftable_3d) # 주변합 표시
mosaicplot(ftable_3d, color = c('lightblue', 'lightgreen')) # 시각화
prop.table(ftable_3d) # 비율 분할표
table_3d = table(sex,income_poverty,h1n1_vaccine)
table_3d # 일반 분할표
addmargins(table_3d) # 주변합 표시
mosaicplot(table_3d, color = c('lightblue', 'lightgreen')) # 시각화
prop.table(table_3d) # 비율 분할표
# 명목형 자료
library(DescTools)
library(vcd)
table_norm = table(sex, h1n1_vaccine)
chisq.test(table_norm)
chisq.test(table_norm) # 카이 스퀘어 독립성 검정
GTest(table_norm)
assocstats(table_norm)
# 순서형 자료
library(vcdExtra)
table_ord = table(h1n1_knowledge, income_poverty)
CMHtest(table_ord)
CMHtest(table_ord, types = 'cor')
# MH 검정
CMHtest(JobSat, types = 'cor') #p-value가 0.08! / CMHtest() 함수는 vcdExtra 패키지 안에 있음
MHChisqTest(table_ord)
CMHtest(table_ord, types = 'cor')
CMHtest(table_ord, types = 'cor')
MHChisqTest(table_ord)
chisq.test(table_ord) # 카이 스퀘어 독립성 검정
table_ord
CMHtest(table_ord, types = 'cor') # M-H test from vcdExtra
MHChisqTest(table_ord) # M-H test from DescTools
addmargins(table_norm)
n = table_norm %>% apply(1,sum)
n
addmargins(table_norm)
sweep(table_norm,1,n)
sweep(table_norm,1,n.'+')
sweep(table_norm,1,n,'+')
sweep(table_norm,1,n,'/')
# 비율의 차이
norm_con[1,1] - norm_con[2,1]
norm_con = sweep(table_norm,1,n,'/') # 결합확률 구함
# 비율의 차이
norm_con[1,1] - norm_con[2,1]
# 상대 위험도
norm_con[1,1] / norm_con[2,1]
# 오즈비 (백신 맞은 확률을 파이로!)
(norm_con[2,1] / norm_con[1,1]) / (norm_con[2,2] / norm_con[2,1])
# 오즈비 (백신 맞은 확률을 파이로!)
(norm_con[1,2] / norm_con[1,1]) / (norm_con[2,2] / norm_con[2,1])
install.packages('epiR')
# 라이브러리 사용
library(epiR)
epi.2by2(norm_con)
# 오즈비 (백신 맞은 확률을 파이로!)
(norm_con[1,2] / norm_con[1,1]) / (norm_con[2,2] / norm_con[2,1])
epi.2by2(norm_con)
# 상대 위험도
norm_con[1,1] / norm_con[2,1]
detach(data)
epi.2by2(norm_con,interpret = T)
epi.2by2(table_norm,interpret = T)
epi.2by2(table_norm)
table_norm
data %>% str()
table_norm = table(sex, factor(h1n1_vaccine, levels = c('Y','N'))
table_norm = table(sex, factor(h1n1_vaccine, levels = c('Y','N')))
table_norm = table(sex, factor(h1n1_vaccine, levels = c('Y','N')))
table_norm
chisq.test(table_norm) # 카이 스퀘어 독립성 검정
GTest(table_norm) # 가능도비 검정
assocstats(table_norm) # 둘 다!
# 직접 구하기
table_norm
addmargins(table_norm)
n = table_norm %>% apply(1,sum)
n # 행별 합계 확인
norm_con = sweep(table_norm,1,n,'/') # 결합확률 구함
# 비율의 차이
norm_con[1,1] - norm_con[2,1]
# 상대 위험도
norm_con[1,1] / norm_con[2,1]
# 오즈비 (백신 맞은 확률을 파이로!)
(norm_con[1,1] / norm_con[1,2]) / (norm_con[2,1] / norm_con[2,2])
epi.2by2(table_norm)
# 비율의 차이
norm_con[1,1] - norm_con[2,1]
norm_con = sweep(table_norm,1,n,'/') # 결합확률 구함
# 비율의 차이
norm_con[1,1] - norm_con[2,1]
norm_con
# 상대 위험도
norm_con[1,1] / norm_con[2,1]
epi.2by2(table_norm)
# 비율의 차이
norm_con[1,1] - norm_con[2,1]
norm_con
# 상대 위험도
norm_con[1,1] / norm_con[2,1]
# 오즈비 (백신 맞은 확률을 파이로!)
(norm_con[1,1] / norm_con[1,2]) / (norm_con[2,1] / norm_con[2,2])
